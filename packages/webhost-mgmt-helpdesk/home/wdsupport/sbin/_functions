VHOSTPATH_PREFIX="/var/www/vhosts"
VHOSTUSER_WEB="www-data"
VHOSTGROUP_WEB="www-data"
VHOSTUSER_MIN_ID=10000
VHOSTGROUP_MIN_ID=1000

function isVhostPath() {
	if [ ! -f "$1" ] && [ ! -d "$1" ]; then
		echo "Error: $1 is not a file or directory"
		return 0
	fi

	absPath=`readlink -f "$1"`

	if [[ ! $absPath =~ "^"$VHOSTPATH_PREFIX ]]; then
	        echo "Error: $absPath does not have a $VHOSTPATH_PREFIX prefix"
        	return 0
	fi
	
	echo $absPath
	return 1
}

function isVhostUser() {
	if [[ ! $1 =~ ^[a-zA-Z0-9.-]+$ ]]; then
		echo "Error: Invalid user"
		return 0
	fi

	uid="`grep ^"$1": /etc/passwd | cut -d : -f 3`"

	if [ "$uid" = "" ]; then
	        echo "Error: User "$1" does not exist"
	        return 0
	fi

	if [ "$1" = "$VHOSTUSER_WEB" ] || [ "$uid" -ge "$VHOSTUSER_MIN_ID" ]; then
		echo $uid
		return 1
	else
	        echo "Error: Illegal user "$1
		return 0
	fi
}

function isVhostGroup() {
	if [[ ! $1 =~ ^[a-zA-Z0-9.-]+$ ]]; then
		echo "Error: Invalid group"
		return 0
	fi

	gid="`grep ^"$1": /etc/group | cut -d : -f 3`"

	if [ "$gid" = "" ]; then
	        echo "Error: Group "$1" does not exist"
	        return 0
	fi

	if [ "$1" = "$VHOSTGROUP_WEB" ] || [ "$gid" -ge "$VHOSTGROUP_MIN_ID" ]; then
		echo $gid
		return 1
	else
	        echo "Error: Illegal group "$1
		return 0
	fi
}

function isChownStr() {
	if [[ ! $1 =~ ^[a-zA-Z0-9.-]+[:]?[a-zA-Z0-9.-]*$ ]]; then
		echo "Error: Invalid chown arg1"
		return 0
	fi

	if [[ $1 =~ ^[a-zA-Z0-9.-]+[:][a-zA-Z0-9.-]+$ ]]; then
		user="`echo "$1" | sed 's/^\([a-zA-Z0-9.-]\+\)[:]\([a-zA-Z0-9.-]\+\)$/\1/'`"
		group="`echo "$1" | sed 's/^\([a-zA-Z0-9.-]\+\)[:]\([a-zA-Z0-9.-]\+\)$/\2/'`"
	else
		user=$1
	fi

	vhostUserOut="`isVhostUser $user`"

	if [ "$?" = "0" ]; then
		echo "$vhostUserOut"
	        return 0
	else
		uid="$vhostUserOut"
	fi

	if [ ! "$group" = "" ]; then
		vhostGroupOut="`isVhostGroup $group`"

		if [ "$?" = "0" ]; then
			echo "$vhostGroupOut"
		        return 0
		else
			gid="$vhostGroupOut"
		fi
	
		echo "$user:$group"
	else
		echo "$user"
	fi

	return 1
}

function isChmodStr() {
	if [[ ! $1 =~ ^[0-7][0-7][0-7]$ ]]; then
		echo "Error: Invalid chmod arg1"
		return 0
	fi

	echo $1

	return 1
}

function choose() {
    local v e
    typeset -i i=0
    v=$1
    shift 2
    for e in "$@"
    do
        echo "$i) $e"
        i=i+1
    done
    echo -n "Which one would you like to use: "
    read REPLY
    i="$REPLY"
    if [ $i -gt 0  -a  $i -le $# ]
    then
        eval $v="\$$i"
    else
        eval $v=""
    fi
}

function verifyApache() {
        RESULT="`/usr/sbin/apache2ctl configtest 2>&1`"
        echo "Config test result:"
        echo $RESULT
        echo
        echo "Please verify the configuration (escalate if needed)."

        if [ "`echo $RESULT | grep 'Syntax OK'`" == "" ]; then
                return 1
        else
                return 0
        fi
}

